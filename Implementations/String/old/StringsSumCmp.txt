//Contenido:
//s_sum()
//s_cmp


//Return the sum of 2 positive strings s_sum("0012", "0") = "12"
string s_sum(string s1, string s2){
	reverse(s1.begin(), s1.end());
	reverse(s2.begin(), s2.end());
	
	ll i, n1 = s1.length(), n2 = s2.length(), carry = 0;
	string ans = "";
	
	for(i = 0; i < min(n1, n2); ++i){
		ans += to_string( (s1[i] - '0' + s2[i] - '0' + carry) % 10);
		carry = (s1[i] - '0' + s2[i] - '0' + carry > 9) ? 1 : 0;
	}

	for(; i < n1; ++i){
		ans += to_string( (s1[i] - '0' + carry) % 10);
		carry = (s1[i] - '0' + carry > 9) ? 1 : 0;
	}
	
	for(; i < n2; ++i){
		ans += to_string( (s2[i] - '0' + carry) % 10);
		carry = (s2[i] - '0' + carry > 9) ? 1 : 0;
	}
	
	ans += to_string(carry);
	
	reverse(ans.begin(), ans.end());

	//Crop leading 0's
	for(i = 0; ans[i] == '0'; ++i);
	
	return ans.substr(i, ans.length() - i);
}

//Returns -1 if s1 > s2, 0 if s1 == s2 and 1 if s1 < s2
//Numbers without leading 0's
int s_cmp(string& s1, string& s2){
	int i, n1 = s1.length(), n2 = s2.length();
	if(n1 > n2) return -1;
	if(n1 < n2) return 1;
	
	for(i = 0; i < n1; ++i){
		if(s1[i] > s2[i]) return -1;
		if(s1[i] < s2[i]) return 1;
	}
	
	return 0;//Equals
}
