vector<pair<pii, int>> edge; //edge[i] = ((u, v), w) u -> v with weight w
int n, edge_sz = 0;

void insert(int a, int b, int w) {
    edge.pb(mp(mp(a, b), w));
    ++edge_sz;
}

vi dist;
//int_inf if not recheable, int_inf + 1 if negative cycle
//O(V * E)
int BellmanFord(int s, int t) { //source != sink
    int i, j, u, v, w;
    dist.assign(n, int_inf);
    dist[s] = 0;
    for(i = 0; i < n; ++i) {
        for(j = 0; j < edge_sz; ++j) {
            u = edge[j].fi.fi; v = edge[j].fi.se; w = edge[j].se;
            dist[v] = min(dist[v], dist[u] + w);
        }
    }
    for(j = 0; j < edge_sz; ++j) {
        u = edge[j].fi.fi; v = edge[j].fi.se; w = edge[j].se;
        if(dist[u] + w < dist[v]) return int_inf + 1;
    }

    return dist[t];
}