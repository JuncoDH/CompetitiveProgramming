int arr[1000][1000];

int intLCS(string s1, string s2) {
	unsigned i, j;
	string s = "";

	//Reseteo
	for (i = 0; i < s1.length() + 1; i++) {
		for (j = 0; j < s2.length() + 1; j++) {
			arr[i][j] = 0;
		}
	}

	//LCS
	for (i = 1; i < s1.length() + 1; i++) {
		for (j = 1; j < s2.length() + 1; j++) {
			if (s1[i - 1] != s2[j - 1]) {
				arr[i][j] = max(arr[i - 1][j], arr[i][j - 1]);
			} else {
				arr[i][j] = min(arr[i - 1][j],arr[i][j-1]) + 1;
			}
		}
	}
/*
	for(i=0;i<s1.length()+1;i++){
		for(j=0;j<s2.length()+1;j++){
			cout<<arr[i][j]<<" ";
		}
		cout<<endl;
	}*/
return arr[s1.length()][s2.length()];
}


int arr[1000][1000];

string stringLCS(string s1, string s2) {
	unsigned i, j;
	string s = "";

	//Reseteo
	for (i = 0; i < s1.length() + 1; i++) {
		for (j = 0; j < s2.length() + 1; j++) {
			arr[i][j] = 0;
		}
	}

	//LCS
	for (i = 1; i < s1.length() + 1; i++) {
		for (j = 1; j < s2.length() + 1; j++) {
			if (s1[i - 1] != s2[j - 1]) {
				arr[i][j] = max(arr[i - 1][j], arr[i][j - 1]);
			} else {
				arr[i][j] = min(arr[i - 1][j],arr[i][j-1]) + 1;
			}
		}
	}
/*
	for(i=0;i<s1.length()+1;i++){
		for(j=0;j<s2.length()+1;j++){
			cout<<arr[i][j]<<" ";
		}
		cout<<endl;
	}*/

	//Lectura de Tabla
	i = s1.length();
	j = s2.length();
	while (arr[i][j]) {
		if (arr[i][j] > arr[i][j - 1] && arr[i][j] > arr[i - 1][j]) {
			s = s2[j - 1] + s;
			j--;//o i--
		} else if (arr[i][j] > arr[i - 1][j] && arr[i][j] == arr[i][j - 1]) {
			j--;
		} else if (arr[i][j] > arr[i][j - 1] && arr[i][j] == arr[i - 1][j]) {
			i--;
		} else {
			j--; //o i--;
		}
	}

	return s;
}