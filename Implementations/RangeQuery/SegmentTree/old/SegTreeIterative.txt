//Iterative SegTree
const ll MAXN = (ll)1e5;
ll n;
vll segtree, v = {1, 3, 6};

//function of SegTree, +, min...
ll f(ll a, ll b){
    return a + b;
}

void build(){
    ll i;
    n = v.size();
    //complete to a power of two, if f is sum add 0, if f is min add INT_MAX...
    while(n != LSB(n)){v.pb(0ll); ++n;}
    segtree.resize(2*n);
    
    for(i = 2*n - 1; i > n - 1; --i) segtree[i] = v[i - n];
    for(; i > 0; --i) segtree[i] = f(segtree[i<<1], segtree[i<<1|1]);
}

void update(ll pos, ll x){
    segtree[pos + n] = v[pos] = x;
    for(ll i = (pos + n) >> 1; i > 0; i >>= 1) segtree[i] = f(segtree[i<<1], segtree[i<<1|1]);
}

ll query(ll l, ll r){
    l += n; r += n;
    ll ans = 0;
    while(l <= r){
        if((l & 1) == 1) ans += segtree[l++];
        if((r & 1) == 0) ans += segtree[r--];
        r >>= 1; l >>= 1;
    }
    return ans;
}